version: 1.0.{build}

environment:
  matrix:
  - COMPILER: gcc
    PLATFORM: cygwin64

install:
  # Set Environment variables
  - SET PATH_ORIGINAL=%PATH%
  - SET PATH_CYGWIN64=c:\cygwin64\bin
  - SET PATH=%PATH_CYGWIN64%;%PATH_ORIGINAL%
  - SET WORK_DIR=c:\projects
  - SET WORK_DIR_IN_CYGWIN=/cygdrive/c/projects
  - SET CYGWIN64_DIR=/cygdrive/c/cygwin64
  - CD %WORK_DIR%
  #- SET PATH=%PATH%;%WORK_DIR%/build/NinjaMinGW/usr/bin;%WORK_DIR%/build/NinjaMinGW/usr/lib/swift/mingw 
  - uname -a
  
  # Install packages
  - C:\cygwin64\setup-x86_64.exe -qnNdO -R C:/cygwin64 -s http://cygwin.mirror.constant.com -l C:/cygwin64/var/cache/setup
    -P cmake
    -P ninja
    -P clang
    -P pkg-config
    -P python
    -P wget
    -P libcurl-devel
    -P libedit-devel
    -P libiconv-devel
    -P libicu-devel
    -P libxml2-devel
    -P python
    -P gcc
    -P g++
  # workaround for llvm-tblgen.exe error "Unknown pseudo relocation protocol version 256."
  - wget -q http://cygwin.mirror.constant.com/x86_64/release/binutils/binutils-2.25-4.tar.xz
  - tar -x -C / -f binutils-2.25-4.tar.xz
  
  # Patch GCC header
  # Foundation uses clang option '-flocks' which uses internal keyword '__block'
  # We should remove __block from the prototype in sys/unistd.h
  - sed -i "s;__block, int __edflag;, int __edflag;" /usr/include/sys/unistd.h
  
  # Download Swift compiler
  - MKDIR build\Ninja-ReleaseAssert
  - CD %WORK_DIR%/build/Ninja-ReleaseAssert
  - wget -q https://ci.appveyor.com/api/projects/tinysun212/swift-compiler-builder-6xb6g/artifacts/swift.zip
  - 7z x swift.zip
  - MOVE usr swift-cygwin-x86_64
  - cp -p swift-cygwin-x86_64/bin/swift.exe swift-cygwin-x86_64/bin/swiftc.exe
  - cp -p swift-cygwin-x86_64/bin/swift.exe swift-cygwin-x86_64/bin/swift-autolink-extract.exe
  # Missing libraries
  - CD %WORK_DIR%/build/Ninja-ReleaseAssert/swift-cygwin-x86_64/lib/swift/cygwin/x86_64
  - cp -p libswiftCore.dll.a libswiftNewlib.dll.a libswiftRemoteMirror.dll.a libswiftSwiftOnoneSupport.dll.a ..
  
  # Download Foundation source
  - git clone https://github.com/tinysun212/swift-corelibs-foundation.git %WORK_DIR_IN_CYGWIN%/swift-corelibs-foundation
  - CD %WORK_DIR%/swift-corelibs-foundation & git checkout -qf swift-windows-4.0-branch & cd ..

  # Download XCTest source
  - git clone https://github.com/tinysun212/swift-corelibs-xctest.git %WORK_DIR_IN_CYGWIN%/swift-corelibs-xctest
  - CD %WORK_DIR%/swift-corelibs-xctest & git checkout -qf swift-windows-4.0-branch & cd ..
  
  # Download llbuild source
  - git clone https://github.com/tinysun212/swift-llbuild.git %WORK_DIR_IN_CYGWIN%/llbuild
  - CD %WORK_DIR%/llbuild & git checkout -qf swift-windows-4.0-branch & cd ..

build_script:
  # Build Foundation
  - CD %WORK_DIR%/swift-corelibs-foundation
  - SET SWIFTC=%WORK_DIR_IN_CYGWIN%/build/Ninja-ReleaseAssert/swift-cygwin-x86_64/bin/swiftc 
  - SET CLANG=/usr/bin/clang
  - SET SWIFT=%WORK_DIR_IN_CYGWIN%/build/Ninja-ReleaseAssert/swift-cygwin-x86_64/bin/swift 
  - SET SWIFT_SDK=%WORK_DIR_IN_CYGWIN%/build/Ninja-ReleaseAssert/swift-cygwin-x86_64
  - SET BUILD_DIR=%WORK_DIR_IN_CYGWIN%/build/Ninja-ReleaseAssert/foundation-cygwin-x86_64
  - SET DSTROOT=/
  - SET PREFIX=/usr/
  # The environment variable SDKROOT affects to the Swift compiler. We define this variable in subcommand.
  - env SDKROOT=%SWIFT_SDK% python ./configure Release --target=x86_64-windows-cygnus -DXCTEST_BUILD_DIR=%WORK_DIR_IN_CYGWIN%/build/Ninja-ReleaseAssert/xctest-cygwin-x86_64
  - ninja

  # Build XCTest
  - CD %WORK_DIR%/swift-corelibs-xctest
  - sh -c "python build_script.py
    --swiftc=$WORK_DIR_IN_CYGWIN/build/Ninja-ReleaseAssert/swift-cygwin-x86_64/bin/swiftc 
    --build-dir=$WORK_DIR_IN_CYGWIN/build/Ninja-ReleaseAssert/xctest-cygwin-x86_64 
    --foundation-build-dir=$WORK_DIR_IN_CYGWIN/build/Ninja-ReleaseAssert/foundation-cygwin-x86_64/Foundation --release"
    
   # Build llbuild
   - CD %WORK_DIR%/llbuild
   - env cmake -G Ninja -DCMAKE_C_COMPILER:PATH=clang -DCMAKE_CXX_COMPILER:PATH=clang++ -DLLVM_VERSION_MAJOR:STRING=4 
     -DLLVM_VERSION_MINOR:STRING=0 -DLLVM_VERSION_PATCH:STRING=0 -DCLANG_VERSION_MAJOR:STRING=4 -DCLANG_VERSION_MINOR:STRING=0 
     -DCLANG_VERSION_PATCH:STRING=0 -DCMAKE_MAKE_PROGRAM=ninja -DCMAKE_INSTALL_PREFIX:PATH=/usr/ -DLIT_EXECUTABLE:PATH=lit.py 
     -DFILECHECK_EXECUTABLE:PATH=FileCheck -DCMAKE_BUILD_TYPE:STRING=Release -DLLVM_ENABLE_ASSERTIONS:BOOL=TRUE 
     -DLLBUILD_SUPPORT_BINDINGS:= 
     $WORK_DIR_IN_CYGWIN/llbuild
  
after_build:
  # Copy Foundation
  - CD %WORK_DIR%/build/Ninja-ReleaseAssert/foundation-cygwin-x86_64/Foundation
  - MKDIR usr\bin
  - MKDIR usr\lib\swift\cygwin\x86_64
  # CoreFoundation header directory (usr\lib\swift\CoreFoundation) is already there.
  - cp -p libFoundation.dll usr/bin
  - cp -p libFoundation.dll usr/lib/swift/cygwin
  - cp -p Foundation.swiftdoc Foundation.swiftmodule usr/lib/swift/cygwin/x86_64
  # Copy XCTest
  - cp -p %WORK_DIR%/build/Ninja-ReleaseAssert/xctest-cygwin-x86_64/libXCTest.dll usr/bin
  - cp -p %WORK_DIR%/build/Ninja-ReleaseAssert/xctest-cygwin-x86_64/libXCTest.dll usr/lib/swift/cygwin
  - cp -p %WORK_DIR%/build/Ninja-ReleaseAssert/xctest-cygwin-x86_64/XCTest.swift* usr/lib/swift/cygwin/x86_64
  # Archiving
  - 7z a swift_foundation.zip usr
  - mv swift_foundation.zip %APPVEYOR_BUILD_FOLDER%

test_script:
  - ECHO skip test
  
artifacts:
  - path: swift_foundation.zip
    name: SWIFT FOUNDATION
